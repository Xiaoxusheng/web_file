name: Go CI/CD Release

on:
  push:
    tags:
      - 'v*.*.*'  # 仅匹配语义化版本标签触发

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV  # 移除了v前缀

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.7'

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build Multi-Platform Binaries
        run: |
          platforms=(
            "linux/amd64"
            "linux/arm64"
            "darwin/amd64"
            "darwin/arm64" 
            "windows/amd64"
          )

          for platform in "${platforms[@]}"; do
            GOOS=${platform%/*}
            GOARCH=${platform#*/}
            OUTPUT="web-${GOOS}-${GOARCH}-v${VERSION}"  # 添加v前缀
          
            if [ "$GOOS" = "windows" ]; then
              OUTPUT+=".exe"
            fi

            GOOS=$GOOS GOARCH=$GOARCH go build -o "$OUTPUT" -ldflags "-w -s" ./...
          done

      - name: Create Release
        id: create-release
        uses: actions/create-release@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: "Web v${{ env.VERSION }}"
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v2
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./web-*
          asset_name: ${{ github.ref_name }}/${{ github.run_id }}/$(basename ${{ asset_path }})  # 修正后的命名方式