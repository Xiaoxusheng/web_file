name: Go CI/CD Release

on:
  push:
    tags:
      - 'v*.*.*' # 只有当推送符合此模式的标签时触发工作流
jobs:
  example:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}  # 使用 PAT 令牌
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.7' # 根据需要替换为你想要的 Go 版本

      - name: Build
        run: go build -o web -ldflags "-w -s" ./...

      - name: Archive production artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: web

      - name: Download artifact for deployment
        uses: actions/download-artifact@v4
        with:
          name: web

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: web ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./web
          asset_name: web-${{ github.ref }}
          asset_content_type: application/octet-stream