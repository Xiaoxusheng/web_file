name: Go Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 仅匹配语义化版本标签触发

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go 1.22.7
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.7'

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build for Linux
        run: |
          mkdir -p build/linux
          GOOS=linux GOARCH=amd64 go build -o build/linux/web -ldflags "-w -s" ./...

      - name: Create tar.gz archive
        run: |
          cd build/linux
          tar -czf web-linux-amd64-${{ github.ref_name }}.tar.gz web

      - name: Create Release
        id: create-release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: "Release v${{ github.ref_name }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./web.tar.gz
          asset_name: file.tar.gz
          asset_content_type: application/x-gzip
